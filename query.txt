1. SELEZIONARE TUTTI GLI STUDENTI NEL 1990

SELECT * 
FROM `students`
WHERE `date_of_birth` LIKE '1990%';

2. SELEZIONARE TUTTI I CORSI CHE VALGONO PIU' DI 10 CREDITI

SELECT * 
FROM `courses`
WHERE `cfu` > 10;

3. SELEZIONARE TUTTI GLI STUDENTI CHE HANNO PIU' DI 30 ANNI

SELECT * 
FROM `students`
WHERE `date_of_birth` < '1993-07-28';

SELECT * 
FROM `students` 
WHERE TIMESTAMPDIFF(Year, `date_of_birth`, curdate()) > 30;

4. SELEZIONARE TUTTI I CORSI DEL PRIMO SEMESTRE DEL PRIMO ANNO DI UN QUALSIASI CORSO DI LAUREA

SELECT * 
FROM `courses`
WHERE `period` = 'I semestre'
AND `year` = 1;

5. SELEZIONARE TUTTI GLI APPELLI D'ESAME CHE AVVENGONO NEL POMERIGGIO DOPO LE 14 DEL 20/06/2020

SELECT * 
FROM `exams`
WHERE HOUR(`hour`) >= '14'
AND `date` = '2020-06-20';

6. SELEZIONARE TUTTI I CORSI DI LAUREA MAGISTRALE

SELECT * 
FROM `degrees`
WHERE `level` = 'magistrale';

7. DA QUANTI DIPARTIMENTI E' COMPOSTA L'UNIVERSITA'?

SELECT COUNT(*) AS 'n_departments'
FROM `departments`;

8. QUANTI SONO GLI INSEGNANTI CHE NON HANNO UN NUMERO DI TELEFONO?

SELECT COUNT(*) AS `teachers_without_phone`
FROM `teachers`
WHERE `phone` IS NULL;
---------------------------------------------------------------------------
GROUP BY
---------------------------------------------------------------------------
1. Contare quanti iscritti ci sono stati ogni anno
SELECT COUNT(*) AS `numero_iscritti`, YEAR(`enrolment_date`) AS `anno`
FROM `students`
GROUP BY YEAR(`enrolment_date`);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT COUNT(*) AS `numero_insegnanti`, `office_address` AS `office`
FROM `teachers`
GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame
SELECT `exam_id` AS `appello_esame`, ROUND(AVG(`vote`)) AS `media`
FROM `exam_Student`
GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT COUNT(*) AS `numero_corsi`, `department_id` AS `dipartimento`
FROM `degrees`
GROUP BY `dipartimento`;

------------------------------------------------------------------------------
JOIN
------------------------------------------------------------------------------
1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT S.name AS 'nome studente', S.surname AS 'cognome studente', S.registration_number AS 'matricola'
FROM `degrees` AS D
JOIN `students` AS S ON S.degree_id = D.id
WHERE D.name = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
SELECT DEG.name AS 'corso' , DEP.name AS 'dipartimento'
FROM `departments` AS DEP
JOIN `degrees` AS DEG ON DEG.department_id = DEP.id
WHERE DEP.name = 'Dipartimento di Neuroscienze';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT C.name AS 'Corso', t.surname AS 'Insegnante', t.id AS 'ID Insegnante'
FROM `teachers` AS T
JOIN `course_teacher` AS CT ON CT.teacher_id = T.id
JOIN `courses` AS C ON CT.course_id = C.id
WHERE T.name = 'Fulvio' AND T.surname = 'Amato';

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
SELECT S.surname AS 'Cognome studente', S.name AS 'Nome studente', DEG.name AS 'Corso di Laurea', DEG.level AS 'Livello corso', DEP.name AS 'Dipartimento'
FROM `students` AS S
JOIN `degrees` AS DEG ON S.degree_id = DEG.id
JOIN `departments` AS DEP ON DEG.department_id = DEP.id
ORDER BY S.surname ASC, S.name ASC;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT D.name AS 'Corso di Laurea', C.name AS 'Corso', T.name AS 'Nome insegnante', T.surname AS 'Cognome insegnante'
FROM `degrees` AS D
JOIN `courses` AS C ON C.degree_id = D.id
JOIN `course_teacher` AS CT ON CT.course_id = C.id
JOIN `teachers` AS T ON CT.teacher_id = T.id;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
SELECT DISTINCT T.name AS 'Nome insegnante', T.surname AS 'Cognome insegnante', DEP.name AS 'Dipartimento'
FROM `departments` AS DEP
JOIN `degrees` AS DEG ON DEG.department_id = DEP.id
JOIN `courses` AS C ON C.degree_id = DEG.id
JOIN `course_teacher` AS CT ON CT.course_id = C.id
JOIN `teachers` AS T ON CT.teacher_id = T.id
WHERE DEP.name = 'Dipartimento di Matematica';

7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami

SELECT  S.`name` AS `Nome Studente` , S.`surname` AS `Cognome studente`, C.`name` AS `Nome corso`, COUNT(*),
MAX(ES.`vote`) as `max_vote`
FROM `students` AS S
JOIN `exam_student` AS ES
ON `S`.`id` = `ES`.`student_id`
JOIN `exams` AS E
ON `E`.`id` = `ES`.`exam_id`
JOIN `courses` AS C 
ON C.`id` = E.`course_id`
GROUP BY S.`id`, C.`id`
HAVING `max_vote` >= 18
ORDER BY S.`surname`, S.`name`;